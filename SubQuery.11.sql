DROP DATABASE IF EXISTS DBPROFESSOR;

CREATE DATABASE DBPROFESSOR;

USE DBPROFESSOR;

CREATE TABLE DOCENTE (
	IDDOCENTE INT NOT NULL PRIMARY KEY AUTO_INCREMENT
	, NOME VARCHAR(45)
);

CREATE TABLE DISCIPLINA (
	IDDISCIPLINA INT NOT NULL PRIMARY KEY AUTO_INCREMENT
	, NOME VARCHAR(45)
);

CREATE TABLE PROFESSOR (
	IDDOCENTE INT NOT NULL
	, IDDISCIPLINA INT NOT NULL
	, PRIMARY KEY (IDDOCENTE, IDDISCIPLINA)
	, FOREIGN KEY (IDDOCENTE) REFERENCES DOCENTE (IDDOCENTE)
	, FOREIGN KEY (IDDISCIPLINA) REFERENCES DISCIPLINA (IDDISCIPLINA)
);

CREATE TABLE TUTOR (
	IDDOCENTE INT NOT NULL
	, IDDISCIPLINA INT NOT NULL
	, PRIMARY KEY (IDDOCENTE, IDDISCIPLINA)
	, FOREIGN KEY (IDDOCENTE) REFERENCES DOCENTE (IDDOCENTE)
	, FOREIGN KEY (IDDISCIPLINA) REFERENCES DISCIPLINA (IDDISCIPLINA)
);

CREATE TABLE ORIENTADOR (
	IDDOCENTE INT NOT NULL
	, IDDISCIPLINA INT NOT NULL
	, PRIMARY KEY (IDDOCENTE, IDDISCIPLINA)
	, FOREIGN KEY (IDDOCENTE) REFERENCES DOCENTE (IDDOCENTE)
	, FOREIGN KEY (IDDISCIPLINA) REFERENCES DISCIPLINA (IDDISCIPLINA)
);

INSERT INTO DOCENTE VALUES(1, 'ANDRE');
INSERT INTO DOCENTE VALUES(2, 'LUCIANO');
INSERT INTO DOCENTE VALUES(3, 'ELI');
INSERT INTO DOCENTE VALUES(4, 'JAQUE');
INSERT INTO DOCENTE VALUES(5, 'ADRIANO');

INSERT INTO DISCIPLINA VALUES(1, 'MODELAGEM DE DADOS');
INSERT INTO DISCIPLINA VALUES(2, 'ALGORITMO');
INSERT INTO DISCIPLINA VALUES(3, 'INFRAESTRUTURA');
INSERT INTO DISCIPLINA VALUES(4, 'POO');
INSERT INTO DISCIPLINA VALUES(5, 'TCS');
INSERT INTO DISCIPLINA VALUES(6, 'SGDB');

INSERT INTO PROFESSOR VALUES(1, 1);
INSERT INTO PROFESSOR VALUES(2, 3);
INSERT INTO PROFESSOR VALUES(3, 2);
INSERT INTO PROFESSOR VALUES(4, 2);
INSERT INTO PROFESSOR VALUES(5, 4);
INSERT INTO ORIENTADOR VALUES(2, 5);
INSERT INTO ORIENTADOR VALUES(3, 5);
INSERT INTO ORIENTADOR VALUES(4, 5);
INSERT INTO TUTOR VALUES(1, 6);


/*QUESTAO 01*/
CREATE TABLE ALUNO (
	IDALUNO INT NOT NULL AUTO_INCREMENT
    , NOME VARCHAR(45)
    , DTNASCIMENTO DATE
    , PRIMARY KEY (IDALUNO)
);

CREATE TABLE MATRICULA (
	IDMATRICULA INT NOT NULL AUTO_INCREMENT
    , IDALUNO INT NOT NULL
    , IDDISCIPLINA INT NOT NULL
    , DTMATRICULA DATE
    , PRIMARY KEY (IDMATRICULA)
    , FOREIGN KEY (IDALUNO) REFERENCES ALUNO (IDALUNO)
    , FOREIGN KEY (IDDISCIPLINA) REFERENCES DISCIPLINA (IDDISCIPLINA)
);

/*QUESTAO 02*/
ALTER TABLE DISCIPLINA ADD CARGA_HORARIA INT;


/*QUESTAO 03*/
SET SQL_SAFE_UPDATES = 0;
UPDATE DISCIPLINA SET CARGA_HORARIA =  80 WHERE NOME = 'MODELAGEM DE DADOS';
UPDATE DISCIPLINA SET CARGA_HORARIA =  80 WHERE NOME = 'ALGORITMO';
UPDATE DISCIPLINA SET CARGA_HORARIA =  40 WHERE NOME = 'INFRAESTRUTURA';
UPDATE DISCIPLINA SET CARGA_HORARIA = 120 WHERE NOME = 'POO';
UPDATE DISCIPLINA SET CARGA_HORARIA = 160 WHERE NOME = 'TCS';
UPDATE DISCIPLINA SET CARGA_HORARIA =  80 WHERE NOME = 'SGDB';

/*QUESTAO 04*/
INSERT INTO ALUNO (NOME, DTNASCIMENTO) VALUES ('PEDRO', '2000-01-01');
INSERT INTO ALUNO (NOME, DTNASCIMENTO) VALUES ('TIAGO', '1999-01-02');
INSERT INTO ALUNO (NOME, DTNASCIMENTO) VALUES ('JOAO', '1998-01-03');
INSERT INTO ALUNO (NOME, DTNASCIMENTO) VALUES ('MARIA', '1997-01-04');
INSERT INTO ALUNO (NOME, DTNASCIMENTO) VALUES ('CAROLINA', '1996-01-05');

INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(1, 5, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(4, 1, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(3, 3, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(2, 6, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(2, 1, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(1, 4, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(5, 2, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(2, 2, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(1, 3, NOW());
INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA, DTMATRICULA)VALUES(1, 2, NOW());

/*view de apoio*/
CREATE VIEW VW_ALOCACAO AS  
SELECT 
	DOCENTE.IDDOCENTE
    , DOCENTE.NOME AS NOMEDOCENTE
    , ALOCACAO.TIPO    
    , DISCIPLINA.IDDISCIPLINA
    , DISCIPLINA.NOME AS NOMEDISCIPLINA
    , DISCIPLINA.CARGA_HORARIA
FROM
	(
		SELECT IDDOCENTE, IDDISCIPLINA, 'TUTOR' AS TIPO FROM TUTOR UNION 
		SELECT IDDOCENTE, IDDISCIPLINA, 'PROFESSOR' AS TIPO FROM PROFESSOR UNION
		SELECT IDDOCENTE, IDDISCIPLINA, 'ORIENTADOR' AS TIPO FROM ORIENTADOR
	) AS ALOCACAO
    INNER JOIN DOCENTE ON
    DOCENTE.IDDOCENTE = ALOCACAO.IDDOCENTE
    INNER JOIN DISCIPLINA ON
    DISCIPLINA.IDDISCIPLINA = ALOCACAO.IDDISCIPLINA
    
;

/*QUESTAO 05*/
SELECT 
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
    , VW_ALOCACAO.TIPO
    , VW_ALOCACAO.IDDISCIPLINA
    , VW_ALOCACAO.NOMEDISCIPLINA
    , COUNT(ALUNO.IDALUNO) AS QTDEALUNO
    , AVG(YEAR(NOW()) - YEAR(ALUNO.DTNASCIMENTO)) AS MEDIAIDADE
FROM
	VW_ALOCACAO
    LEFT JOIN MATRICULA ON 
    VW_ALOCACAO.IDDISCIPLINA = MATRICULA.IDDISCIPLINA
    LEFT JOIN ALUNO ON
    ALUNO.IDALUNO = MATRICULA.IDALUNO
GROUP BY 
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
    , VW_ALOCACAO.TIPO
    , VW_ALOCACAO.IDDISCIPLINA
    , VW_ALOCACAO.NOMEDISCIPLINA;

/*QUESTAO 06*/
SELECT 
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
    , VW_ALOCACAO.TIPO
    , SUM(VW_ALOCACAO.CARGA_HORARIA)
FROM
	VW_ALOCACAO
GROUP BY
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
    , VW_ALOCACAO.TIPO;
    
/*QUESTAO 07*/
SELECT 
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
FROM
	VW_ALOCACAO
WHERE
	VW_ALOCACAO.TIPO IN ('TUTOR', 'PROFESSOR');    
    
    
/*QUESTAO 08*/
SELECT 
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
FROM
	VW_ALOCACAO
WHERE
	VW_ALOCACAO.TIPO IN ('ORIENTADOR');   
        
/*QUESTAO 09*/
SELECT 
    VW_ALOCACAO.IDDISCIPLINA
    , VW_ALOCACAO.NOMEDISCIPLINA
    , COUNT(DISTINCT VW_ALOCACAO.IDDOCENTE) AS QTDE_DOCENTE
    , COUNT(DISTINCT MATRICULA.IDMATRICULA) AS QTDE_MATRICULA
FROM
	VW_ALOCACAO
    LEFT JOIN MATRICULA ON
    VW_ALOCACAO.IDDISCIPLINA = MATRICULA.IDDISCIPLINA
GROUP BY
	VW_ALOCACAO.IDDISCIPLINA
    , VW_ALOCACAO.NOMEDISCIPLINA;

/*QUESTAO 10*/
SELECT 
	DOCENTE.IDDOCENTE
    , DOCENTE.NOME
FROM
	DOCENTE
WHERE
	EXISTS (SELECT 0 FROM PROFESSOR WHERE PROFESSOR.IDDOCENTE = DOCENTE.IDDOCENTE);
    
/*QUESTAO 11*/    
SELECT
	IDALUNO
    , NOME
    , IDADE
    , MEDIA
FROM
	(
		SELECT 
				ALUNO.IDALUNO
				, ALUNO.NOME
				, YEAR(NOW()) - YEAR(DTNASCIMENTO) AS IDADE
				, (SELECT AVG(YEAR(NOW()) - YEAR(DTNASCIMENTO)) FROM ALUNO) AS MEDIA
		FROM
			ALUNO
	) AS RESULTADO
WHERE
	IDADE > MEDIA 
;

    
/*QUESTAO 12*/   
CREATE VIEW VW_ESTATISTICA AS
SELECT
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
    , COUNT(DISTINCT VW_ALOCACAO.IDDISCIPLINA) AS QTDE_DISCIPLINA
    , COUNT(DISTINCT MATRICULA.IDMATRICULA) AS QTDE_MATRICULA
FROM
	VW_ALOCACAO
    LEFT JOIN MATRICULA ON
    VW_ALOCACAO.IDDISCIPLINA = MATRICULA.IDDISCIPLINA
GROUP BY
	VW_ALOCACAO.IDDOCENTE
    , VW_ALOCACAO.NOMEDOCENTE
;

SELECT * 
FROM (
		SELECT IDDOCENTE, NOMEDOCENTE, QTDE_DISCIPLINA AS QTDE, 'DISCIPLINA' AS TIPO 
		FROM VW_ESTATISTICA ORDER BY QTDE_DISCIPLINA DESC LIMIT 1
    ) AS DISCIPLINA
UNION
SELECT * 
FROM (
		SELECT IDDOCENTE, NOMEDOCENTE, QTDE_MATRICULA AS QTDE, 'MATRICULA' AS TIPO
		FROM VW_ESTATISTICA ORDER BY QTDE_MATRICULA DESC LIMIT 1
	) AS MATRICULA;

    





